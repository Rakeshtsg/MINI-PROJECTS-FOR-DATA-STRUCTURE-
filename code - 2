#include <stdio.h>
#include <stdbool.h>

#define ROWS 3
#define COLUMNS 3

char board[ROWS][COLUMNS] = { {'1', '2', '3'},
                              {'4', '5', '6'},
                              {'7', '8', '9'} };

bool player1_turn = true;

void draw_board()
{
    printf("\n");
    printf(" %c | %c | %c\n", board[0][0], board[0][1], board[0][2]);
    printf("---+---+---\n");
    printf(" %c | %c | %c\n", board[1][0], board[1][1], board[1][2]);
    printf("---+---+---\n");
    printf(" %c | %c | %c\n", board[2][0], board[2][1], board[2][2]);
}

void get_move()
{
    int row, column;
    char symbol;

    if (player1_turn)
    {
        symbol = 'X';
        printf("Player 1's turn (%c): ", symbol);
    }
    else
    {
        symbol = 'O';
        printf("Player 2's turn (%c): ", symbol);
    }

    scanf("%d", &row);
    row--;
    scanf("%d", &column);
    column--;

    if (board[row][column] != 'X' && board[row][column] != 'O')
    {
        board[row][column] = symbol;
        player1_turn = !player1_turn;
    }
    else
    {
        printf("\nThat space is already occupied!\n");
    }
}

bool check_win()
{
    bool win = false;

    // Check rows
    for (int i = 0; i < ROWS; i++)
    {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2])
        {
            win = true;
        }
    }

    // Check columns
    for (int i = 0; i < COLUMNS; i++)
    {
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i])
        {
            win = true;
        }
    }

    // Check diagonals
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2])
    {
        win = true;
    }
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0])
    {
        win = true;
    }

    return win;
}

int main(void)
{
    bool game_over = false;

    draw_board();

    while (!game_over)
    {
        get_move();
        draw_board();
        game_over =
